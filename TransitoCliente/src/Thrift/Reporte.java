/**
 * Autogenerated by Thrift Compiler (0.12.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package Thrift;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.12.0)", date = "2019-06-16")
public class Reporte implements org.apache.thrift.TBase<Reporte, Reporte._Fields>, java.io.Serializable, Cloneable, Comparable<Reporte> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("Reporte");

  private static final org.apache.thrift.protocol.TField ID_REPORTE_FIELD_DESC = new org.apache.thrift.protocol.TField("idReporte", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField LATITUD_FIELD_DESC = new org.apache.thrift.protocol.TField("latitud", org.apache.thrift.protocol.TType.DOUBLE, (short)2);
  private static final org.apache.thrift.protocol.TField LONGITUD_FIELD_DESC = new org.apache.thrift.protocol.TField("longitud", org.apache.thrift.protocol.TType.DOUBLE, (short)3);
  private static final org.apache.thrift.protocol.TField NOMBRE_CONDUCTOR_FIELD_DESC = new org.apache.thrift.protocol.TField("nombreConductor", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField NOMBRE_ASEGURADORA_FIELD_DESC = new org.apache.thrift.protocol.TField("nombreAseguradora", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField NUM_POLIZA_FIELD_DESC = new org.apache.thrift.protocol.TField("numPoliza", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField MARCA_FIELD_DESC = new org.apache.thrift.protocol.TField("marca", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField MODELO_FIELD_DESC = new org.apache.thrift.protocol.TField("modelo", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField COLOR_FIELD_DESC = new org.apache.thrift.protocol.TField("color", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField PLACA_FIELD_DESC = new org.apache.thrift.protocol.TField("placa", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField FECHA_HORA_FIELD_DESC = new org.apache.thrift.protocol.TField("fechaHora", org.apache.thrift.protocol.TType.STRING, (short)11);
  private static final org.apache.thrift.protocol.TField ID_CONDUCTOR_FIELD_DESC = new org.apache.thrift.protocol.TField("idConductor", org.apache.thrift.protocol.TType.I32, (short)12);
  private static final org.apache.thrift.protocol.TField ID_VEHICULO_FIELD_DESC = new org.apache.thrift.protocol.TField("idVehiculo", org.apache.thrift.protocol.TType.I32, (short)13);
  private static final org.apache.thrift.protocol.TField ID_INCIDENTE_FIELD_DESC = new org.apache.thrift.protocol.TField("idIncidente", org.apache.thrift.protocol.TType.I32, (short)14);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new ReporteStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new ReporteTupleSchemeFactory();

  public int idReporte; // required
  public double latitud; // required
  public double longitud; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String nombreConductor; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String nombreAseguradora; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String numPoliza; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String marca; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String modelo; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String color; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String placa; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String fechaHora; // required
  public int idConductor; // required
  public int idVehiculo; // required
  public int idIncidente; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ID_REPORTE((short)1, "idReporte"),
    LATITUD((short)2, "latitud"),
    LONGITUD((short)3, "longitud"),
    NOMBRE_CONDUCTOR((short)4, "nombreConductor"),
    NOMBRE_ASEGURADORA((short)5, "nombreAseguradora"),
    NUM_POLIZA((short)6, "numPoliza"),
    MARCA((short)7, "marca"),
    MODELO((short)8, "modelo"),
    COLOR((short)9, "color"),
    PLACA((short)10, "placa"),
    FECHA_HORA((short)11, "fechaHora"),
    ID_CONDUCTOR((short)12, "idConductor"),
    ID_VEHICULO((short)13, "idVehiculo"),
    ID_INCIDENTE((short)14, "idIncidente");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID_REPORTE
          return ID_REPORTE;
        case 2: // LATITUD
          return LATITUD;
        case 3: // LONGITUD
          return LONGITUD;
        case 4: // NOMBRE_CONDUCTOR
          return NOMBRE_CONDUCTOR;
        case 5: // NOMBRE_ASEGURADORA
          return NOMBRE_ASEGURADORA;
        case 6: // NUM_POLIZA
          return NUM_POLIZA;
        case 7: // MARCA
          return MARCA;
        case 8: // MODELO
          return MODELO;
        case 9: // COLOR
          return COLOR;
        case 10: // PLACA
          return PLACA;
        case 11: // FECHA_HORA
          return FECHA_HORA;
        case 12: // ID_CONDUCTOR
          return ID_CONDUCTOR;
        case 13: // ID_VEHICULO
          return ID_VEHICULO;
        case 14: // ID_INCIDENTE
          return ID_INCIDENTE;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __IDREPORTE_ISSET_ID = 0;
  private static final int __LATITUD_ISSET_ID = 1;
  private static final int __LONGITUD_ISSET_ID = 2;
  private static final int __IDCONDUCTOR_ISSET_ID = 3;
  private static final int __IDVEHICULO_ISSET_ID = 4;
  private static final int __IDINCIDENTE_ISSET_ID = 5;
  private byte __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID_REPORTE, new org.apache.thrift.meta_data.FieldMetaData("idReporte", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.LATITUD, new org.apache.thrift.meta_data.FieldMetaData("latitud", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.LONGITUD, new org.apache.thrift.meta_data.FieldMetaData("longitud", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.NOMBRE_CONDUCTOR, new org.apache.thrift.meta_data.FieldMetaData("nombreConductor", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.NOMBRE_ASEGURADORA, new org.apache.thrift.meta_data.FieldMetaData("nombreAseguradora", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.NUM_POLIZA, new org.apache.thrift.meta_data.FieldMetaData("numPoliza", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MARCA, new org.apache.thrift.meta_data.FieldMetaData("marca", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MODELO, new org.apache.thrift.meta_data.FieldMetaData("modelo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.COLOR, new org.apache.thrift.meta_data.FieldMetaData("color", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PLACA, new org.apache.thrift.meta_data.FieldMetaData("placa", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.FECHA_HORA, new org.apache.thrift.meta_data.FieldMetaData("fechaHora", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ID_CONDUCTOR, new org.apache.thrift.meta_data.FieldMetaData("idConductor", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ID_VEHICULO, new org.apache.thrift.meta_data.FieldMetaData("idVehiculo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ID_INCIDENTE, new org.apache.thrift.meta_data.FieldMetaData("idIncidente", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(Reporte.class, metaDataMap);
  }

  public Reporte() {
  }

  public Reporte(
    int idReporte,
    double latitud,
    double longitud,
    java.lang.String nombreConductor,
    java.lang.String nombreAseguradora,
    java.lang.String numPoliza,
    java.lang.String marca,
    java.lang.String modelo,
    java.lang.String color,
    java.lang.String placa,
    java.lang.String fechaHora,
    int idConductor,
    int idVehiculo,
    int idIncidente)
  {
    this();
    this.idReporte = idReporte;
    setIdReporteIsSet(true);
    this.latitud = latitud;
    setLatitudIsSet(true);
    this.longitud = longitud;
    setLongitudIsSet(true);
    this.nombreConductor = nombreConductor;
    this.nombreAseguradora = nombreAseguradora;
    this.numPoliza = numPoliza;
    this.marca = marca;
    this.modelo = modelo;
    this.color = color;
    this.placa = placa;
    this.fechaHora = fechaHora;
    this.idConductor = idConductor;
    setIdConductorIsSet(true);
    this.idVehiculo = idVehiculo;
    setIdVehiculoIsSet(true);
    this.idIncidente = idIncidente;
    setIdIncidenteIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public Reporte(Reporte other) {
    __isset_bitfield = other.__isset_bitfield;
    this.idReporte = other.idReporte;
    this.latitud = other.latitud;
    this.longitud = other.longitud;
    if (other.isSetNombreConductor()) {
      this.nombreConductor = other.nombreConductor;
    }
    if (other.isSetNombreAseguradora()) {
      this.nombreAseguradora = other.nombreAseguradora;
    }
    if (other.isSetNumPoliza()) {
      this.numPoliza = other.numPoliza;
    }
    if (other.isSetMarca()) {
      this.marca = other.marca;
    }
    if (other.isSetModelo()) {
      this.modelo = other.modelo;
    }
    if (other.isSetColor()) {
      this.color = other.color;
    }
    if (other.isSetPlaca()) {
      this.placa = other.placa;
    }
    if (other.isSetFechaHora()) {
      this.fechaHora = other.fechaHora;
    }
    this.idConductor = other.idConductor;
    this.idVehiculo = other.idVehiculo;
    this.idIncidente = other.idIncidente;
  }

  public Reporte deepCopy() {
    return new Reporte(this);
  }

  @Override
  public void clear() {
    setIdReporteIsSet(false);
    this.idReporte = 0;
    setLatitudIsSet(false);
    this.latitud = 0.0;
    setLongitudIsSet(false);
    this.longitud = 0.0;
    this.nombreConductor = null;
    this.nombreAseguradora = null;
    this.numPoliza = null;
    this.marca = null;
    this.modelo = null;
    this.color = null;
    this.placa = null;
    this.fechaHora = null;
    setIdConductorIsSet(false);
    this.idConductor = 0;
    setIdVehiculoIsSet(false);
    this.idVehiculo = 0;
    setIdIncidenteIsSet(false);
    this.idIncidente = 0;
  }

  public int getIdReporte() {
    return this.idReporte;
  }

  public Reporte setIdReporte(int idReporte) {
    this.idReporte = idReporte;
    setIdReporteIsSet(true);
    return this;
  }

  public void unsetIdReporte() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __IDREPORTE_ISSET_ID);
  }

  /** Returns true if field idReporte is set (has been assigned a value) and false otherwise */
  public boolean isSetIdReporte() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __IDREPORTE_ISSET_ID);
  }

  public void setIdReporteIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __IDREPORTE_ISSET_ID, value);
  }

  public double getLatitud() {
    return this.latitud;
  }

  public Reporte setLatitud(double latitud) {
    this.latitud = latitud;
    setLatitudIsSet(true);
    return this;
  }

  public void unsetLatitud() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __LATITUD_ISSET_ID);
  }

  /** Returns true if field latitud is set (has been assigned a value) and false otherwise */
  public boolean isSetLatitud() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __LATITUD_ISSET_ID);
  }

  public void setLatitudIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __LATITUD_ISSET_ID, value);
  }

  public double getLongitud() {
    return this.longitud;
  }

  public Reporte setLongitud(double longitud) {
    this.longitud = longitud;
    setLongitudIsSet(true);
    return this;
  }

  public void unsetLongitud() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __LONGITUD_ISSET_ID);
  }

  /** Returns true if field longitud is set (has been assigned a value) and false otherwise */
  public boolean isSetLongitud() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __LONGITUD_ISSET_ID);
  }

  public void setLongitudIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __LONGITUD_ISSET_ID, value);
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getNombreConductor() {
    return this.nombreConductor;
  }

  public Reporte setNombreConductor(@org.apache.thrift.annotation.Nullable java.lang.String nombreConductor) {
    this.nombreConductor = nombreConductor;
    return this;
  }

  public void unsetNombreConductor() {
    this.nombreConductor = null;
  }

  /** Returns true if field nombreConductor is set (has been assigned a value) and false otherwise */
  public boolean isSetNombreConductor() {
    return this.nombreConductor != null;
  }

  public void setNombreConductorIsSet(boolean value) {
    if (!value) {
      this.nombreConductor = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getNombreAseguradora() {
    return this.nombreAseguradora;
  }

  public Reporte setNombreAseguradora(@org.apache.thrift.annotation.Nullable java.lang.String nombreAseguradora) {
    this.nombreAseguradora = nombreAseguradora;
    return this;
  }

  public void unsetNombreAseguradora() {
    this.nombreAseguradora = null;
  }

  /** Returns true if field nombreAseguradora is set (has been assigned a value) and false otherwise */
  public boolean isSetNombreAseguradora() {
    return this.nombreAseguradora != null;
  }

  public void setNombreAseguradoraIsSet(boolean value) {
    if (!value) {
      this.nombreAseguradora = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getNumPoliza() {
    return this.numPoliza;
  }

  public Reporte setNumPoliza(@org.apache.thrift.annotation.Nullable java.lang.String numPoliza) {
    this.numPoliza = numPoliza;
    return this;
  }

  public void unsetNumPoliza() {
    this.numPoliza = null;
  }

  /** Returns true if field numPoliza is set (has been assigned a value) and false otherwise */
  public boolean isSetNumPoliza() {
    return this.numPoliza != null;
  }

  public void setNumPolizaIsSet(boolean value) {
    if (!value) {
      this.numPoliza = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getMarca() {
    return this.marca;
  }

  public Reporte setMarca(@org.apache.thrift.annotation.Nullable java.lang.String marca) {
    this.marca = marca;
    return this;
  }

  public void unsetMarca() {
    this.marca = null;
  }

  /** Returns true if field marca is set (has been assigned a value) and false otherwise */
  public boolean isSetMarca() {
    return this.marca != null;
  }

  public void setMarcaIsSet(boolean value) {
    if (!value) {
      this.marca = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getModelo() {
    return this.modelo;
  }

  public Reporte setModelo(@org.apache.thrift.annotation.Nullable java.lang.String modelo) {
    this.modelo = modelo;
    return this;
  }

  public void unsetModelo() {
    this.modelo = null;
  }

  /** Returns true if field modelo is set (has been assigned a value) and false otherwise */
  public boolean isSetModelo() {
    return this.modelo != null;
  }

  public void setModeloIsSet(boolean value) {
    if (!value) {
      this.modelo = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getColor() {
    return this.color;
  }

  public Reporte setColor(@org.apache.thrift.annotation.Nullable java.lang.String color) {
    this.color = color;
    return this;
  }

  public void unsetColor() {
    this.color = null;
  }

  /** Returns true if field color is set (has been assigned a value) and false otherwise */
  public boolean isSetColor() {
    return this.color != null;
  }

  public void setColorIsSet(boolean value) {
    if (!value) {
      this.color = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getPlaca() {
    return this.placa;
  }

  public Reporte setPlaca(@org.apache.thrift.annotation.Nullable java.lang.String placa) {
    this.placa = placa;
    return this;
  }

  public void unsetPlaca() {
    this.placa = null;
  }

  /** Returns true if field placa is set (has been assigned a value) and false otherwise */
  public boolean isSetPlaca() {
    return this.placa != null;
  }

  public void setPlacaIsSet(boolean value) {
    if (!value) {
      this.placa = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getFechaHora() {
    return this.fechaHora;
  }

  public Reporte setFechaHora(@org.apache.thrift.annotation.Nullable java.lang.String fechaHora) {
    this.fechaHora = fechaHora;
    return this;
  }

  public void unsetFechaHora() {
    this.fechaHora = null;
  }

  /** Returns true if field fechaHora is set (has been assigned a value) and false otherwise */
  public boolean isSetFechaHora() {
    return this.fechaHora != null;
  }

  public void setFechaHoraIsSet(boolean value) {
    if (!value) {
      this.fechaHora = null;
    }
  }

  public int getIdConductor() {
    return this.idConductor;
  }

  public Reporte setIdConductor(int idConductor) {
    this.idConductor = idConductor;
    setIdConductorIsSet(true);
    return this;
  }

  public void unsetIdConductor() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __IDCONDUCTOR_ISSET_ID);
  }

  /** Returns true if field idConductor is set (has been assigned a value) and false otherwise */
  public boolean isSetIdConductor() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __IDCONDUCTOR_ISSET_ID);
  }

  public void setIdConductorIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __IDCONDUCTOR_ISSET_ID, value);
  }

  public int getIdVehiculo() {
    return this.idVehiculo;
  }

  public Reporte setIdVehiculo(int idVehiculo) {
    this.idVehiculo = idVehiculo;
    setIdVehiculoIsSet(true);
    return this;
  }

  public void unsetIdVehiculo() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __IDVEHICULO_ISSET_ID);
  }

  /** Returns true if field idVehiculo is set (has been assigned a value) and false otherwise */
  public boolean isSetIdVehiculo() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __IDVEHICULO_ISSET_ID);
  }

  public void setIdVehiculoIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __IDVEHICULO_ISSET_ID, value);
  }

  public int getIdIncidente() {
    return this.idIncidente;
  }

  public Reporte setIdIncidente(int idIncidente) {
    this.idIncidente = idIncidente;
    setIdIncidenteIsSet(true);
    return this;
  }

  public void unsetIdIncidente() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __IDINCIDENTE_ISSET_ID);
  }

  /** Returns true if field idIncidente is set (has been assigned a value) and false otherwise */
  public boolean isSetIdIncidente() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __IDINCIDENTE_ISSET_ID);
  }

  public void setIdIncidenteIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __IDINCIDENTE_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case ID_REPORTE:
      if (value == null) {
        unsetIdReporte();
      } else {
        setIdReporte((java.lang.Integer)value);
      }
      break;

    case LATITUD:
      if (value == null) {
        unsetLatitud();
      } else {
        setLatitud((java.lang.Double)value);
      }
      break;

    case LONGITUD:
      if (value == null) {
        unsetLongitud();
      } else {
        setLongitud((java.lang.Double)value);
      }
      break;

    case NOMBRE_CONDUCTOR:
      if (value == null) {
        unsetNombreConductor();
      } else {
        setNombreConductor((java.lang.String)value);
      }
      break;

    case NOMBRE_ASEGURADORA:
      if (value == null) {
        unsetNombreAseguradora();
      } else {
        setNombreAseguradora((java.lang.String)value);
      }
      break;

    case NUM_POLIZA:
      if (value == null) {
        unsetNumPoliza();
      } else {
        setNumPoliza((java.lang.String)value);
      }
      break;

    case MARCA:
      if (value == null) {
        unsetMarca();
      } else {
        setMarca((java.lang.String)value);
      }
      break;

    case MODELO:
      if (value == null) {
        unsetModelo();
      } else {
        setModelo((java.lang.String)value);
      }
      break;

    case COLOR:
      if (value == null) {
        unsetColor();
      } else {
        setColor((java.lang.String)value);
      }
      break;

    case PLACA:
      if (value == null) {
        unsetPlaca();
      } else {
        setPlaca((java.lang.String)value);
      }
      break;

    case FECHA_HORA:
      if (value == null) {
        unsetFechaHora();
      } else {
        setFechaHora((java.lang.String)value);
      }
      break;

    case ID_CONDUCTOR:
      if (value == null) {
        unsetIdConductor();
      } else {
        setIdConductor((java.lang.Integer)value);
      }
      break;

    case ID_VEHICULO:
      if (value == null) {
        unsetIdVehiculo();
      } else {
        setIdVehiculo((java.lang.Integer)value);
      }
      break;

    case ID_INCIDENTE:
      if (value == null) {
        unsetIdIncidente();
      } else {
        setIdIncidente((java.lang.Integer)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case ID_REPORTE:
      return getIdReporte();

    case LATITUD:
      return getLatitud();

    case LONGITUD:
      return getLongitud();

    case NOMBRE_CONDUCTOR:
      return getNombreConductor();

    case NOMBRE_ASEGURADORA:
      return getNombreAseguradora();

    case NUM_POLIZA:
      return getNumPoliza();

    case MARCA:
      return getMarca();

    case MODELO:
      return getModelo();

    case COLOR:
      return getColor();

    case PLACA:
      return getPlaca();

    case FECHA_HORA:
      return getFechaHora();

    case ID_CONDUCTOR:
      return getIdConductor();

    case ID_VEHICULO:
      return getIdVehiculo();

    case ID_INCIDENTE:
      return getIdIncidente();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case ID_REPORTE:
      return isSetIdReporte();
    case LATITUD:
      return isSetLatitud();
    case LONGITUD:
      return isSetLongitud();
    case NOMBRE_CONDUCTOR:
      return isSetNombreConductor();
    case NOMBRE_ASEGURADORA:
      return isSetNombreAseguradora();
    case NUM_POLIZA:
      return isSetNumPoliza();
    case MARCA:
      return isSetMarca();
    case MODELO:
      return isSetModelo();
    case COLOR:
      return isSetColor();
    case PLACA:
      return isSetPlaca();
    case FECHA_HORA:
      return isSetFechaHora();
    case ID_CONDUCTOR:
      return isSetIdConductor();
    case ID_VEHICULO:
      return isSetIdVehiculo();
    case ID_INCIDENTE:
      return isSetIdIncidente();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof Reporte)
      return this.equals((Reporte)that);
    return false;
  }

  public boolean equals(Reporte that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_idReporte = true;
    boolean that_present_idReporte = true;
    if (this_present_idReporte || that_present_idReporte) {
      if (!(this_present_idReporte && that_present_idReporte))
        return false;
      if (this.idReporte != that.idReporte)
        return false;
    }

    boolean this_present_latitud = true;
    boolean that_present_latitud = true;
    if (this_present_latitud || that_present_latitud) {
      if (!(this_present_latitud && that_present_latitud))
        return false;
      if (this.latitud != that.latitud)
        return false;
    }

    boolean this_present_longitud = true;
    boolean that_present_longitud = true;
    if (this_present_longitud || that_present_longitud) {
      if (!(this_present_longitud && that_present_longitud))
        return false;
      if (this.longitud != that.longitud)
        return false;
    }

    boolean this_present_nombreConductor = true && this.isSetNombreConductor();
    boolean that_present_nombreConductor = true && that.isSetNombreConductor();
    if (this_present_nombreConductor || that_present_nombreConductor) {
      if (!(this_present_nombreConductor && that_present_nombreConductor))
        return false;
      if (!this.nombreConductor.equals(that.nombreConductor))
        return false;
    }

    boolean this_present_nombreAseguradora = true && this.isSetNombreAseguradora();
    boolean that_present_nombreAseguradora = true && that.isSetNombreAseguradora();
    if (this_present_nombreAseguradora || that_present_nombreAseguradora) {
      if (!(this_present_nombreAseguradora && that_present_nombreAseguradora))
        return false;
      if (!this.nombreAseguradora.equals(that.nombreAseguradora))
        return false;
    }

    boolean this_present_numPoliza = true && this.isSetNumPoliza();
    boolean that_present_numPoliza = true && that.isSetNumPoliza();
    if (this_present_numPoliza || that_present_numPoliza) {
      if (!(this_present_numPoliza && that_present_numPoliza))
        return false;
      if (!this.numPoliza.equals(that.numPoliza))
        return false;
    }

    boolean this_present_marca = true && this.isSetMarca();
    boolean that_present_marca = true && that.isSetMarca();
    if (this_present_marca || that_present_marca) {
      if (!(this_present_marca && that_present_marca))
        return false;
      if (!this.marca.equals(that.marca))
        return false;
    }

    boolean this_present_modelo = true && this.isSetModelo();
    boolean that_present_modelo = true && that.isSetModelo();
    if (this_present_modelo || that_present_modelo) {
      if (!(this_present_modelo && that_present_modelo))
        return false;
      if (!this.modelo.equals(that.modelo))
        return false;
    }

    boolean this_present_color = true && this.isSetColor();
    boolean that_present_color = true && that.isSetColor();
    if (this_present_color || that_present_color) {
      if (!(this_present_color && that_present_color))
        return false;
      if (!this.color.equals(that.color))
        return false;
    }

    boolean this_present_placa = true && this.isSetPlaca();
    boolean that_present_placa = true && that.isSetPlaca();
    if (this_present_placa || that_present_placa) {
      if (!(this_present_placa && that_present_placa))
        return false;
      if (!this.placa.equals(that.placa))
        return false;
    }

    boolean this_present_fechaHora = true && this.isSetFechaHora();
    boolean that_present_fechaHora = true && that.isSetFechaHora();
    if (this_present_fechaHora || that_present_fechaHora) {
      if (!(this_present_fechaHora && that_present_fechaHora))
        return false;
      if (!this.fechaHora.equals(that.fechaHora))
        return false;
    }

    boolean this_present_idConductor = true;
    boolean that_present_idConductor = true;
    if (this_present_idConductor || that_present_idConductor) {
      if (!(this_present_idConductor && that_present_idConductor))
        return false;
      if (this.idConductor != that.idConductor)
        return false;
    }

    boolean this_present_idVehiculo = true;
    boolean that_present_idVehiculo = true;
    if (this_present_idVehiculo || that_present_idVehiculo) {
      if (!(this_present_idVehiculo && that_present_idVehiculo))
        return false;
      if (this.idVehiculo != that.idVehiculo)
        return false;
    }

    boolean this_present_idIncidente = true;
    boolean that_present_idIncidente = true;
    if (this_present_idIncidente || that_present_idIncidente) {
      if (!(this_present_idIncidente && that_present_idIncidente))
        return false;
      if (this.idIncidente != that.idIncidente)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + idReporte;

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(latitud);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(longitud);

    hashCode = hashCode * 8191 + ((isSetNombreConductor()) ? 131071 : 524287);
    if (isSetNombreConductor())
      hashCode = hashCode * 8191 + nombreConductor.hashCode();

    hashCode = hashCode * 8191 + ((isSetNombreAseguradora()) ? 131071 : 524287);
    if (isSetNombreAseguradora())
      hashCode = hashCode * 8191 + nombreAseguradora.hashCode();

    hashCode = hashCode * 8191 + ((isSetNumPoliza()) ? 131071 : 524287);
    if (isSetNumPoliza())
      hashCode = hashCode * 8191 + numPoliza.hashCode();

    hashCode = hashCode * 8191 + ((isSetMarca()) ? 131071 : 524287);
    if (isSetMarca())
      hashCode = hashCode * 8191 + marca.hashCode();

    hashCode = hashCode * 8191 + ((isSetModelo()) ? 131071 : 524287);
    if (isSetModelo())
      hashCode = hashCode * 8191 + modelo.hashCode();

    hashCode = hashCode * 8191 + ((isSetColor()) ? 131071 : 524287);
    if (isSetColor())
      hashCode = hashCode * 8191 + color.hashCode();

    hashCode = hashCode * 8191 + ((isSetPlaca()) ? 131071 : 524287);
    if (isSetPlaca())
      hashCode = hashCode * 8191 + placa.hashCode();

    hashCode = hashCode * 8191 + ((isSetFechaHora()) ? 131071 : 524287);
    if (isSetFechaHora())
      hashCode = hashCode * 8191 + fechaHora.hashCode();

    hashCode = hashCode * 8191 + idConductor;

    hashCode = hashCode * 8191 + idVehiculo;

    hashCode = hashCode * 8191 + idIncidente;

    return hashCode;
  }

  @Override
  public int compareTo(Reporte other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetIdReporte()).compareTo(other.isSetIdReporte());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIdReporte()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.idReporte, other.idReporte);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetLatitud()).compareTo(other.isSetLatitud());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLatitud()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.latitud, other.latitud);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetLongitud()).compareTo(other.isSetLongitud());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLongitud()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.longitud, other.longitud);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetNombreConductor()).compareTo(other.isSetNombreConductor());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNombreConductor()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.nombreConductor, other.nombreConductor);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetNombreAseguradora()).compareTo(other.isSetNombreAseguradora());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNombreAseguradora()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.nombreAseguradora, other.nombreAseguradora);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetNumPoliza()).compareTo(other.isSetNumPoliza());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumPoliza()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.numPoliza, other.numPoliza);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetMarca()).compareTo(other.isSetMarca());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMarca()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.marca, other.marca);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetModelo()).compareTo(other.isSetModelo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetModelo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.modelo, other.modelo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetColor()).compareTo(other.isSetColor());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetColor()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.color, other.color);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetPlaca()).compareTo(other.isSetPlaca());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPlaca()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.placa, other.placa);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetFechaHora()).compareTo(other.isSetFechaHora());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFechaHora()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.fechaHora, other.fechaHora);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetIdConductor()).compareTo(other.isSetIdConductor());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIdConductor()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.idConductor, other.idConductor);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetIdVehiculo()).compareTo(other.isSetIdVehiculo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIdVehiculo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.idVehiculo, other.idVehiculo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetIdIncidente()).compareTo(other.isSetIdIncidente());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIdIncidente()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.idIncidente, other.idIncidente);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("Reporte(");
    boolean first = true;

    sb.append("idReporte:");
    sb.append(this.idReporte);
    first = false;
    if (!first) sb.append(", ");
    sb.append("latitud:");
    sb.append(this.latitud);
    first = false;
    if (!first) sb.append(", ");
    sb.append("longitud:");
    sb.append(this.longitud);
    first = false;
    if (!first) sb.append(", ");
    sb.append("nombreConductor:");
    if (this.nombreConductor == null) {
      sb.append("null");
    } else {
      sb.append(this.nombreConductor);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("nombreAseguradora:");
    if (this.nombreAseguradora == null) {
      sb.append("null");
    } else {
      sb.append(this.nombreAseguradora);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("numPoliza:");
    if (this.numPoliza == null) {
      sb.append("null");
    } else {
      sb.append(this.numPoliza);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("marca:");
    if (this.marca == null) {
      sb.append("null");
    } else {
      sb.append(this.marca);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("modelo:");
    if (this.modelo == null) {
      sb.append("null");
    } else {
      sb.append(this.modelo);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("color:");
    if (this.color == null) {
      sb.append("null");
    } else {
      sb.append(this.color);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("placa:");
    if (this.placa == null) {
      sb.append("null");
    } else {
      sb.append(this.placa);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("fechaHora:");
    if (this.fechaHora == null) {
      sb.append("null");
    } else {
      sb.append(this.fechaHora);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("idConductor:");
    sb.append(this.idConductor);
    first = false;
    if (!first) sb.append(", ");
    sb.append("idVehiculo:");
    sb.append(this.idVehiculo);
    first = false;
    if (!first) sb.append(", ");
    sb.append("idIncidente:");
    sb.append(this.idIncidente);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class ReporteStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public ReporteStandardScheme getScheme() {
      return new ReporteStandardScheme();
    }
  }

  private static class ReporteStandardScheme extends org.apache.thrift.scheme.StandardScheme<Reporte> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, Reporte struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID_REPORTE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.idReporte = iprot.readI32();
              struct.setIdReporteIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // LATITUD
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.latitud = iprot.readDouble();
              struct.setLatitudIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // LONGITUD
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.longitud = iprot.readDouble();
              struct.setLongitudIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // NOMBRE_CONDUCTOR
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.nombreConductor = iprot.readString();
              struct.setNombreConductorIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // NOMBRE_ASEGURADORA
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.nombreAseguradora = iprot.readString();
              struct.setNombreAseguradoraIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // NUM_POLIZA
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.numPoliza = iprot.readString();
              struct.setNumPolizaIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // MARCA
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.marca = iprot.readString();
              struct.setMarcaIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // MODELO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.modelo = iprot.readString();
              struct.setModeloIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // COLOR
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.color = iprot.readString();
              struct.setColorIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // PLACA
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.placa = iprot.readString();
              struct.setPlacaIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // FECHA_HORA
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.fechaHora = iprot.readString();
              struct.setFechaHoraIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // ID_CONDUCTOR
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.idConductor = iprot.readI32();
              struct.setIdConductorIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // ID_VEHICULO
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.idVehiculo = iprot.readI32();
              struct.setIdVehiculoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // ID_INCIDENTE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.idIncidente = iprot.readI32();
              struct.setIdIncidenteIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, Reporte struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(ID_REPORTE_FIELD_DESC);
      oprot.writeI32(struct.idReporte);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(LATITUD_FIELD_DESC);
      oprot.writeDouble(struct.latitud);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(LONGITUD_FIELD_DESC);
      oprot.writeDouble(struct.longitud);
      oprot.writeFieldEnd();
      if (struct.nombreConductor != null) {
        oprot.writeFieldBegin(NOMBRE_CONDUCTOR_FIELD_DESC);
        oprot.writeString(struct.nombreConductor);
        oprot.writeFieldEnd();
      }
      if (struct.nombreAseguradora != null) {
        oprot.writeFieldBegin(NOMBRE_ASEGURADORA_FIELD_DESC);
        oprot.writeString(struct.nombreAseguradora);
        oprot.writeFieldEnd();
      }
      if (struct.numPoliza != null) {
        oprot.writeFieldBegin(NUM_POLIZA_FIELD_DESC);
        oprot.writeString(struct.numPoliza);
        oprot.writeFieldEnd();
      }
      if (struct.marca != null) {
        oprot.writeFieldBegin(MARCA_FIELD_DESC);
        oprot.writeString(struct.marca);
        oprot.writeFieldEnd();
      }
      if (struct.modelo != null) {
        oprot.writeFieldBegin(MODELO_FIELD_DESC);
        oprot.writeString(struct.modelo);
        oprot.writeFieldEnd();
      }
      if (struct.color != null) {
        oprot.writeFieldBegin(COLOR_FIELD_DESC);
        oprot.writeString(struct.color);
        oprot.writeFieldEnd();
      }
      if (struct.placa != null) {
        oprot.writeFieldBegin(PLACA_FIELD_DESC);
        oprot.writeString(struct.placa);
        oprot.writeFieldEnd();
      }
      if (struct.fechaHora != null) {
        oprot.writeFieldBegin(FECHA_HORA_FIELD_DESC);
        oprot.writeString(struct.fechaHora);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(ID_CONDUCTOR_FIELD_DESC);
      oprot.writeI32(struct.idConductor);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(ID_VEHICULO_FIELD_DESC);
      oprot.writeI32(struct.idVehiculo);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(ID_INCIDENTE_FIELD_DESC);
      oprot.writeI32(struct.idIncidente);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class ReporteTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public ReporteTupleScheme getScheme() {
      return new ReporteTupleScheme();
    }
  }

  private static class ReporteTupleScheme extends org.apache.thrift.scheme.TupleScheme<Reporte> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, Reporte struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetIdReporte()) {
        optionals.set(0);
      }
      if (struct.isSetLatitud()) {
        optionals.set(1);
      }
      if (struct.isSetLongitud()) {
        optionals.set(2);
      }
      if (struct.isSetNombreConductor()) {
        optionals.set(3);
      }
      if (struct.isSetNombreAseguradora()) {
        optionals.set(4);
      }
      if (struct.isSetNumPoliza()) {
        optionals.set(5);
      }
      if (struct.isSetMarca()) {
        optionals.set(6);
      }
      if (struct.isSetModelo()) {
        optionals.set(7);
      }
      if (struct.isSetColor()) {
        optionals.set(8);
      }
      if (struct.isSetPlaca()) {
        optionals.set(9);
      }
      if (struct.isSetFechaHora()) {
        optionals.set(10);
      }
      if (struct.isSetIdConductor()) {
        optionals.set(11);
      }
      if (struct.isSetIdVehiculo()) {
        optionals.set(12);
      }
      if (struct.isSetIdIncidente()) {
        optionals.set(13);
      }
      oprot.writeBitSet(optionals, 14);
      if (struct.isSetIdReporte()) {
        oprot.writeI32(struct.idReporte);
      }
      if (struct.isSetLatitud()) {
        oprot.writeDouble(struct.latitud);
      }
      if (struct.isSetLongitud()) {
        oprot.writeDouble(struct.longitud);
      }
      if (struct.isSetNombreConductor()) {
        oprot.writeString(struct.nombreConductor);
      }
      if (struct.isSetNombreAseguradora()) {
        oprot.writeString(struct.nombreAseguradora);
      }
      if (struct.isSetNumPoliza()) {
        oprot.writeString(struct.numPoliza);
      }
      if (struct.isSetMarca()) {
        oprot.writeString(struct.marca);
      }
      if (struct.isSetModelo()) {
        oprot.writeString(struct.modelo);
      }
      if (struct.isSetColor()) {
        oprot.writeString(struct.color);
      }
      if (struct.isSetPlaca()) {
        oprot.writeString(struct.placa);
      }
      if (struct.isSetFechaHora()) {
        oprot.writeString(struct.fechaHora);
      }
      if (struct.isSetIdConductor()) {
        oprot.writeI32(struct.idConductor);
      }
      if (struct.isSetIdVehiculo()) {
        oprot.writeI32(struct.idVehiculo);
      }
      if (struct.isSetIdIncidente()) {
        oprot.writeI32(struct.idIncidente);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, Reporte struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(14);
      if (incoming.get(0)) {
        struct.idReporte = iprot.readI32();
        struct.setIdReporteIsSet(true);
      }
      if (incoming.get(1)) {
        struct.latitud = iprot.readDouble();
        struct.setLatitudIsSet(true);
      }
      if (incoming.get(2)) {
        struct.longitud = iprot.readDouble();
        struct.setLongitudIsSet(true);
      }
      if (incoming.get(3)) {
        struct.nombreConductor = iprot.readString();
        struct.setNombreConductorIsSet(true);
      }
      if (incoming.get(4)) {
        struct.nombreAseguradora = iprot.readString();
        struct.setNombreAseguradoraIsSet(true);
      }
      if (incoming.get(5)) {
        struct.numPoliza = iprot.readString();
        struct.setNumPolizaIsSet(true);
      }
      if (incoming.get(6)) {
        struct.marca = iprot.readString();
        struct.setMarcaIsSet(true);
      }
      if (incoming.get(7)) {
        struct.modelo = iprot.readString();
        struct.setModeloIsSet(true);
      }
      if (incoming.get(8)) {
        struct.color = iprot.readString();
        struct.setColorIsSet(true);
      }
      if (incoming.get(9)) {
        struct.placa = iprot.readString();
        struct.setPlacaIsSet(true);
      }
      if (incoming.get(10)) {
        struct.fechaHora = iprot.readString();
        struct.setFechaHoraIsSet(true);
      }
      if (incoming.get(11)) {
        struct.idConductor = iprot.readI32();
        struct.setIdConductorIsSet(true);
      }
      if (incoming.get(12)) {
        struct.idVehiculo = iprot.readI32();
        struct.setIdVehiculoIsSet(true);
      }
      if (incoming.get(13)) {
        struct.idIncidente = iprot.readI32();
        struct.setIdIncidenteIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}


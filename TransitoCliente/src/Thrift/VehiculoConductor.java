/**
 * Autogenerated by Thrift Compiler (0.12.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package Thrift;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.12.0)", date = "2019-06-16")
public class VehiculoConductor implements org.apache.thrift.TBase<VehiculoConductor, VehiculoConductor._Fields>, java.io.Serializable, Cloneable, Comparable<VehiculoConductor> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("VehiculoConductor");

  private static final org.apache.thrift.protocol.TField ID_VEHICULO_CONDUCTOR_FIELD_DESC = new org.apache.thrift.protocol.TField("idVehiculoConductor", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField ID_CONDUCTOR_FIELD_DESC = new org.apache.thrift.protocol.TField("idConductor", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField ID_VEHICULO_FIELD_DESC = new org.apache.thrift.protocol.TField("idVehiculo", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField PROPIETARIO_FIELD_DESC = new org.apache.thrift.protocol.TField("propietario", org.apache.thrift.protocol.TType.STRING, (short)4);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new VehiculoConductorStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new VehiculoConductorTupleSchemeFactory();

  public int idVehiculoConductor; // required
  public int idConductor; // required
  public int idVehiculo; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String propietario; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ID_VEHICULO_CONDUCTOR((short)1, "idVehiculoConductor"),
    ID_CONDUCTOR((short)2, "idConductor"),
    ID_VEHICULO((short)3, "idVehiculo"),
    PROPIETARIO((short)4, "propietario");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID_VEHICULO_CONDUCTOR
          return ID_VEHICULO_CONDUCTOR;
        case 2: // ID_CONDUCTOR
          return ID_CONDUCTOR;
        case 3: // ID_VEHICULO
          return ID_VEHICULO;
        case 4: // PROPIETARIO
          return PROPIETARIO;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __IDVEHICULOCONDUCTOR_ISSET_ID = 0;
  private static final int __IDCONDUCTOR_ISSET_ID = 1;
  private static final int __IDVEHICULO_ISSET_ID = 2;
  private byte __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID_VEHICULO_CONDUCTOR, new org.apache.thrift.meta_data.FieldMetaData("idVehiculoConductor", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ID_CONDUCTOR, new org.apache.thrift.meta_data.FieldMetaData("idConductor", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ID_VEHICULO, new org.apache.thrift.meta_data.FieldMetaData("idVehiculo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PROPIETARIO, new org.apache.thrift.meta_data.FieldMetaData("propietario", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(VehiculoConductor.class, metaDataMap);
  }

  public VehiculoConductor() {
  }

  public VehiculoConductor(
    int idVehiculoConductor,
    int idConductor,
    int idVehiculo,
    java.lang.String propietario)
  {
    this();
    this.idVehiculoConductor = idVehiculoConductor;
    setIdVehiculoConductorIsSet(true);
    this.idConductor = idConductor;
    setIdConductorIsSet(true);
    this.idVehiculo = idVehiculo;
    setIdVehiculoIsSet(true);
    this.propietario = propietario;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public VehiculoConductor(VehiculoConductor other) {
    __isset_bitfield = other.__isset_bitfield;
    this.idVehiculoConductor = other.idVehiculoConductor;
    this.idConductor = other.idConductor;
    this.idVehiculo = other.idVehiculo;
    if (other.isSetPropietario()) {
      this.propietario = other.propietario;
    }
  }

  public VehiculoConductor deepCopy() {
    return new VehiculoConductor(this);
  }

  @Override
  public void clear() {
    setIdVehiculoConductorIsSet(false);
    this.idVehiculoConductor = 0;
    setIdConductorIsSet(false);
    this.idConductor = 0;
    setIdVehiculoIsSet(false);
    this.idVehiculo = 0;
    this.propietario = null;
  }

  public int getIdVehiculoConductor() {
    return this.idVehiculoConductor;
  }

  public VehiculoConductor setIdVehiculoConductor(int idVehiculoConductor) {
    this.idVehiculoConductor = idVehiculoConductor;
    setIdVehiculoConductorIsSet(true);
    return this;
  }

  public void unsetIdVehiculoConductor() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __IDVEHICULOCONDUCTOR_ISSET_ID);
  }

  /** Returns true if field idVehiculoConductor is set (has been assigned a value) and false otherwise */
  public boolean isSetIdVehiculoConductor() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __IDVEHICULOCONDUCTOR_ISSET_ID);
  }

  public void setIdVehiculoConductorIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __IDVEHICULOCONDUCTOR_ISSET_ID, value);
  }

  public int getIdConductor() {
    return this.idConductor;
  }

  public VehiculoConductor setIdConductor(int idConductor) {
    this.idConductor = idConductor;
    setIdConductorIsSet(true);
    return this;
  }

  public void unsetIdConductor() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __IDCONDUCTOR_ISSET_ID);
  }

  /** Returns true if field idConductor is set (has been assigned a value) and false otherwise */
  public boolean isSetIdConductor() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __IDCONDUCTOR_ISSET_ID);
  }

  public void setIdConductorIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __IDCONDUCTOR_ISSET_ID, value);
  }

  public int getIdVehiculo() {
    return this.idVehiculo;
  }

  public VehiculoConductor setIdVehiculo(int idVehiculo) {
    this.idVehiculo = idVehiculo;
    setIdVehiculoIsSet(true);
    return this;
  }

  public void unsetIdVehiculo() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __IDVEHICULO_ISSET_ID);
  }

  /** Returns true if field idVehiculo is set (has been assigned a value) and false otherwise */
  public boolean isSetIdVehiculo() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __IDVEHICULO_ISSET_ID);
  }

  public void setIdVehiculoIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __IDVEHICULO_ISSET_ID, value);
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getPropietario() {
    return this.propietario;
  }

  public VehiculoConductor setPropietario(@org.apache.thrift.annotation.Nullable java.lang.String propietario) {
    this.propietario = propietario;
    return this;
  }

  public void unsetPropietario() {
    this.propietario = null;
  }

  /** Returns true if field propietario is set (has been assigned a value) and false otherwise */
  public boolean isSetPropietario() {
    return this.propietario != null;
  }

  public void setPropietarioIsSet(boolean value) {
    if (!value) {
      this.propietario = null;
    }
  }

  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case ID_VEHICULO_CONDUCTOR:
      if (value == null) {
        unsetIdVehiculoConductor();
      } else {
        setIdVehiculoConductor((java.lang.Integer)value);
      }
      break;

    case ID_CONDUCTOR:
      if (value == null) {
        unsetIdConductor();
      } else {
        setIdConductor((java.lang.Integer)value);
      }
      break;

    case ID_VEHICULO:
      if (value == null) {
        unsetIdVehiculo();
      } else {
        setIdVehiculo((java.lang.Integer)value);
      }
      break;

    case PROPIETARIO:
      if (value == null) {
        unsetPropietario();
      } else {
        setPropietario((java.lang.String)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case ID_VEHICULO_CONDUCTOR:
      return getIdVehiculoConductor();

    case ID_CONDUCTOR:
      return getIdConductor();

    case ID_VEHICULO:
      return getIdVehiculo();

    case PROPIETARIO:
      return getPropietario();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case ID_VEHICULO_CONDUCTOR:
      return isSetIdVehiculoConductor();
    case ID_CONDUCTOR:
      return isSetIdConductor();
    case ID_VEHICULO:
      return isSetIdVehiculo();
    case PROPIETARIO:
      return isSetPropietario();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof VehiculoConductor)
      return this.equals((VehiculoConductor)that);
    return false;
  }

  public boolean equals(VehiculoConductor that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_idVehiculoConductor = true;
    boolean that_present_idVehiculoConductor = true;
    if (this_present_idVehiculoConductor || that_present_idVehiculoConductor) {
      if (!(this_present_idVehiculoConductor && that_present_idVehiculoConductor))
        return false;
      if (this.idVehiculoConductor != that.idVehiculoConductor)
        return false;
    }

    boolean this_present_idConductor = true;
    boolean that_present_idConductor = true;
    if (this_present_idConductor || that_present_idConductor) {
      if (!(this_present_idConductor && that_present_idConductor))
        return false;
      if (this.idConductor != that.idConductor)
        return false;
    }

    boolean this_present_idVehiculo = true;
    boolean that_present_idVehiculo = true;
    if (this_present_idVehiculo || that_present_idVehiculo) {
      if (!(this_present_idVehiculo && that_present_idVehiculo))
        return false;
      if (this.idVehiculo != that.idVehiculo)
        return false;
    }

    boolean this_present_propietario = true && this.isSetPropietario();
    boolean that_present_propietario = true && that.isSetPropietario();
    if (this_present_propietario || that_present_propietario) {
      if (!(this_present_propietario && that_present_propietario))
        return false;
      if (!this.propietario.equals(that.propietario))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + idVehiculoConductor;

    hashCode = hashCode * 8191 + idConductor;

    hashCode = hashCode * 8191 + idVehiculo;

    hashCode = hashCode * 8191 + ((isSetPropietario()) ? 131071 : 524287);
    if (isSetPropietario())
      hashCode = hashCode * 8191 + propietario.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(VehiculoConductor other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetIdVehiculoConductor()).compareTo(other.isSetIdVehiculoConductor());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIdVehiculoConductor()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.idVehiculoConductor, other.idVehiculoConductor);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetIdConductor()).compareTo(other.isSetIdConductor());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIdConductor()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.idConductor, other.idConductor);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetIdVehiculo()).compareTo(other.isSetIdVehiculo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIdVehiculo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.idVehiculo, other.idVehiculo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetPropietario()).compareTo(other.isSetPropietario());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPropietario()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.propietario, other.propietario);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("VehiculoConductor(");
    boolean first = true;

    sb.append("idVehiculoConductor:");
    sb.append(this.idVehiculoConductor);
    first = false;
    if (!first) sb.append(", ");
    sb.append("idConductor:");
    sb.append(this.idConductor);
    first = false;
    if (!first) sb.append(", ");
    sb.append("idVehiculo:");
    sb.append(this.idVehiculo);
    first = false;
    if (!first) sb.append(", ");
    sb.append("propietario:");
    if (this.propietario == null) {
      sb.append("null");
    } else {
      sb.append(this.propietario);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class VehiculoConductorStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public VehiculoConductorStandardScheme getScheme() {
      return new VehiculoConductorStandardScheme();
    }
  }

  private static class VehiculoConductorStandardScheme extends org.apache.thrift.scheme.StandardScheme<VehiculoConductor> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, VehiculoConductor struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID_VEHICULO_CONDUCTOR
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.idVehiculoConductor = iprot.readI32();
              struct.setIdVehiculoConductorIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // ID_CONDUCTOR
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.idConductor = iprot.readI32();
              struct.setIdConductorIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // ID_VEHICULO
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.idVehiculo = iprot.readI32();
              struct.setIdVehiculoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // PROPIETARIO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.propietario = iprot.readString();
              struct.setPropietarioIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, VehiculoConductor struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(ID_VEHICULO_CONDUCTOR_FIELD_DESC);
      oprot.writeI32(struct.idVehiculoConductor);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(ID_CONDUCTOR_FIELD_DESC);
      oprot.writeI32(struct.idConductor);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(ID_VEHICULO_FIELD_DESC);
      oprot.writeI32(struct.idVehiculo);
      oprot.writeFieldEnd();
      if (struct.propietario != null) {
        oprot.writeFieldBegin(PROPIETARIO_FIELD_DESC);
        oprot.writeString(struct.propietario);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class VehiculoConductorTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public VehiculoConductorTupleScheme getScheme() {
      return new VehiculoConductorTupleScheme();
    }
  }

  private static class VehiculoConductorTupleScheme extends org.apache.thrift.scheme.TupleScheme<VehiculoConductor> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, VehiculoConductor struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetIdVehiculoConductor()) {
        optionals.set(0);
      }
      if (struct.isSetIdConductor()) {
        optionals.set(1);
      }
      if (struct.isSetIdVehiculo()) {
        optionals.set(2);
      }
      if (struct.isSetPropietario()) {
        optionals.set(3);
      }
      oprot.writeBitSet(optionals, 4);
      if (struct.isSetIdVehiculoConductor()) {
        oprot.writeI32(struct.idVehiculoConductor);
      }
      if (struct.isSetIdConductor()) {
        oprot.writeI32(struct.idConductor);
      }
      if (struct.isSetIdVehiculo()) {
        oprot.writeI32(struct.idVehiculo);
      }
      if (struct.isSetPropietario()) {
        oprot.writeString(struct.propietario);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, VehiculoConductor struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(4);
      if (incoming.get(0)) {
        struct.idVehiculoConductor = iprot.readI32();
        struct.setIdVehiculoConductorIsSet(true);
      }
      if (incoming.get(1)) {
        struct.idConductor = iprot.readI32();
        struct.setIdConductorIsSet(true);
      }
      if (incoming.get(2)) {
        struct.idVehiculo = iprot.readI32();
        struct.setIdVehiculoIsSet(true);
      }
      if (incoming.get(3)) {
        struct.propietario = iprot.readString();
        struct.setPropietarioIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}


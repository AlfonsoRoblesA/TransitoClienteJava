/**
 * Autogenerated by Thrift Compiler (0.12.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package Thrift;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.12.0)", date = "2019-06-16")
public class Foto implements org.apache.thrift.TBase<Foto, Foto._Fields>, java.io.Serializable, Cloneable, Comparable<Foto> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("Foto");

  private static final org.apache.thrift.protocol.TField ID_FOTO_FIELD_DESC = new org.apache.thrift.protocol.TField("idFoto", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField ID_REPORTE_FIELD_DESC = new org.apache.thrift.protocol.TField("idReporte", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField FOTO_FIELD_DESC = new org.apache.thrift.protocol.TField("foto", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField TIEMPO_CREACION_FIELD_DESC = new org.apache.thrift.protocol.TField("tiempoCreacion", org.apache.thrift.protocol.TType.STRING, (short)4);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new FotoStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new FotoTupleSchemeFactory();

  public int idFoto; // required
  public int idReporte; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String foto; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String tiempoCreacion; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ID_FOTO((short)1, "idFoto"),
    ID_REPORTE((short)2, "idReporte"),
    FOTO((short)3, "foto"),
    TIEMPO_CREACION((short)4, "tiempoCreacion");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID_FOTO
          return ID_FOTO;
        case 2: // ID_REPORTE
          return ID_REPORTE;
        case 3: // FOTO
          return FOTO;
        case 4: // TIEMPO_CREACION
          return TIEMPO_CREACION;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __IDFOTO_ISSET_ID = 0;
  private static final int __IDREPORTE_ISSET_ID = 1;
  private byte __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID_FOTO, new org.apache.thrift.meta_data.FieldMetaData("idFoto", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ID_REPORTE, new org.apache.thrift.meta_data.FieldMetaData("idReporte", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.FOTO, new org.apache.thrift.meta_data.FieldMetaData("foto", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TIEMPO_CREACION, new org.apache.thrift.meta_data.FieldMetaData("tiempoCreacion", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(Foto.class, metaDataMap);
  }

  public Foto() {
  }

  public Foto(
    int idFoto,
    int idReporte,
    java.lang.String foto,
    java.lang.String tiempoCreacion)
  {
    this();
    this.idFoto = idFoto;
    setIdFotoIsSet(true);
    this.idReporte = idReporte;
    setIdReporteIsSet(true);
    this.foto = foto;
    this.tiempoCreacion = tiempoCreacion;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public Foto(Foto other) {
    __isset_bitfield = other.__isset_bitfield;
    this.idFoto = other.idFoto;
    this.idReporte = other.idReporte;
    if (other.isSetFoto()) {
      this.foto = other.foto;
    }
    if (other.isSetTiempoCreacion()) {
      this.tiempoCreacion = other.tiempoCreacion;
    }
  }

  public Foto deepCopy() {
    return new Foto(this);
  }

  @Override
  public void clear() {
    setIdFotoIsSet(false);
    this.idFoto = 0;
    setIdReporteIsSet(false);
    this.idReporte = 0;
    this.foto = null;
    this.tiempoCreacion = null;
  }

  public int getIdFoto() {
    return this.idFoto;
  }

  public Foto setIdFoto(int idFoto) {
    this.idFoto = idFoto;
    setIdFotoIsSet(true);
    return this;
  }

  public void unsetIdFoto() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __IDFOTO_ISSET_ID);
  }

  /** Returns true if field idFoto is set (has been assigned a value) and false otherwise */
  public boolean isSetIdFoto() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __IDFOTO_ISSET_ID);
  }

  public void setIdFotoIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __IDFOTO_ISSET_ID, value);
  }

  public int getIdReporte() {
    return this.idReporte;
  }

  public Foto setIdReporte(int idReporte) {
    this.idReporte = idReporte;
    setIdReporteIsSet(true);
    return this;
  }

  public void unsetIdReporte() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __IDREPORTE_ISSET_ID);
  }

  /** Returns true if field idReporte is set (has been assigned a value) and false otherwise */
  public boolean isSetIdReporte() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __IDREPORTE_ISSET_ID);
  }

  public void setIdReporteIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __IDREPORTE_ISSET_ID, value);
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getFoto() {
    return this.foto;
  }

  public Foto setFoto(@org.apache.thrift.annotation.Nullable java.lang.String foto) {
    this.foto = foto;
    return this;
  }

  public void unsetFoto() {
    this.foto = null;
  }

  /** Returns true if field foto is set (has been assigned a value) and false otherwise */
  public boolean isSetFoto() {
    return this.foto != null;
  }

  public void setFotoIsSet(boolean value) {
    if (!value) {
      this.foto = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getTiempoCreacion() {
    return this.tiempoCreacion;
  }

  public Foto setTiempoCreacion(@org.apache.thrift.annotation.Nullable java.lang.String tiempoCreacion) {
    this.tiempoCreacion = tiempoCreacion;
    return this;
  }

  public void unsetTiempoCreacion() {
    this.tiempoCreacion = null;
  }

  /** Returns true if field tiempoCreacion is set (has been assigned a value) and false otherwise */
  public boolean isSetTiempoCreacion() {
    return this.tiempoCreacion != null;
  }

  public void setTiempoCreacionIsSet(boolean value) {
    if (!value) {
      this.tiempoCreacion = null;
    }
  }

  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case ID_FOTO:
      if (value == null) {
        unsetIdFoto();
      } else {
        setIdFoto((java.lang.Integer)value);
      }
      break;

    case ID_REPORTE:
      if (value == null) {
        unsetIdReporte();
      } else {
        setIdReporte((java.lang.Integer)value);
      }
      break;

    case FOTO:
      if (value == null) {
        unsetFoto();
      } else {
        setFoto((java.lang.String)value);
      }
      break;

    case TIEMPO_CREACION:
      if (value == null) {
        unsetTiempoCreacion();
      } else {
        setTiempoCreacion((java.lang.String)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case ID_FOTO:
      return getIdFoto();

    case ID_REPORTE:
      return getIdReporte();

    case FOTO:
      return getFoto();

    case TIEMPO_CREACION:
      return getTiempoCreacion();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case ID_FOTO:
      return isSetIdFoto();
    case ID_REPORTE:
      return isSetIdReporte();
    case FOTO:
      return isSetFoto();
    case TIEMPO_CREACION:
      return isSetTiempoCreacion();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof Foto)
      return this.equals((Foto)that);
    return false;
  }

  public boolean equals(Foto that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_idFoto = true;
    boolean that_present_idFoto = true;
    if (this_present_idFoto || that_present_idFoto) {
      if (!(this_present_idFoto && that_present_idFoto))
        return false;
      if (this.idFoto != that.idFoto)
        return false;
    }

    boolean this_present_idReporte = true;
    boolean that_present_idReporte = true;
    if (this_present_idReporte || that_present_idReporte) {
      if (!(this_present_idReporte && that_present_idReporte))
        return false;
      if (this.idReporte != that.idReporte)
        return false;
    }

    boolean this_present_foto = true && this.isSetFoto();
    boolean that_present_foto = true && that.isSetFoto();
    if (this_present_foto || that_present_foto) {
      if (!(this_present_foto && that_present_foto))
        return false;
      if (!this.foto.equals(that.foto))
        return false;
    }

    boolean this_present_tiempoCreacion = true && this.isSetTiempoCreacion();
    boolean that_present_tiempoCreacion = true && that.isSetTiempoCreacion();
    if (this_present_tiempoCreacion || that_present_tiempoCreacion) {
      if (!(this_present_tiempoCreacion && that_present_tiempoCreacion))
        return false;
      if (!this.tiempoCreacion.equals(that.tiempoCreacion))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + idFoto;

    hashCode = hashCode * 8191 + idReporte;

    hashCode = hashCode * 8191 + ((isSetFoto()) ? 131071 : 524287);
    if (isSetFoto())
      hashCode = hashCode * 8191 + foto.hashCode();

    hashCode = hashCode * 8191 + ((isSetTiempoCreacion()) ? 131071 : 524287);
    if (isSetTiempoCreacion())
      hashCode = hashCode * 8191 + tiempoCreacion.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(Foto other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetIdFoto()).compareTo(other.isSetIdFoto());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIdFoto()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.idFoto, other.idFoto);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetIdReporte()).compareTo(other.isSetIdReporte());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIdReporte()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.idReporte, other.idReporte);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetFoto()).compareTo(other.isSetFoto());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFoto()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.foto, other.foto);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetTiempoCreacion()).compareTo(other.isSetTiempoCreacion());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTiempoCreacion()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.tiempoCreacion, other.tiempoCreacion);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("Foto(");
    boolean first = true;

    sb.append("idFoto:");
    sb.append(this.idFoto);
    first = false;
    if (!first) sb.append(", ");
    sb.append("idReporte:");
    sb.append(this.idReporte);
    first = false;
    if (!first) sb.append(", ");
    sb.append("foto:");
    if (this.foto == null) {
      sb.append("null");
    } else {
      sb.append(this.foto);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("tiempoCreacion:");
    if (this.tiempoCreacion == null) {
      sb.append("null");
    } else {
      sb.append(this.tiempoCreacion);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class FotoStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public FotoStandardScheme getScheme() {
      return new FotoStandardScheme();
    }
  }

  private static class FotoStandardScheme extends org.apache.thrift.scheme.StandardScheme<Foto> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, Foto struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID_FOTO
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.idFoto = iprot.readI32();
              struct.setIdFotoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // ID_REPORTE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.idReporte = iprot.readI32();
              struct.setIdReporteIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // FOTO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.foto = iprot.readString();
              struct.setFotoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // TIEMPO_CREACION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.tiempoCreacion = iprot.readString();
              struct.setTiempoCreacionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, Foto struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(ID_FOTO_FIELD_DESC);
      oprot.writeI32(struct.idFoto);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(ID_REPORTE_FIELD_DESC);
      oprot.writeI32(struct.idReporte);
      oprot.writeFieldEnd();
      if (struct.foto != null) {
        oprot.writeFieldBegin(FOTO_FIELD_DESC);
        oprot.writeString(struct.foto);
        oprot.writeFieldEnd();
      }
      if (struct.tiempoCreacion != null) {
        oprot.writeFieldBegin(TIEMPO_CREACION_FIELD_DESC);
        oprot.writeString(struct.tiempoCreacion);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class FotoTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public FotoTupleScheme getScheme() {
      return new FotoTupleScheme();
    }
  }

  private static class FotoTupleScheme extends org.apache.thrift.scheme.TupleScheme<Foto> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, Foto struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetIdFoto()) {
        optionals.set(0);
      }
      if (struct.isSetIdReporte()) {
        optionals.set(1);
      }
      if (struct.isSetFoto()) {
        optionals.set(2);
      }
      if (struct.isSetTiempoCreacion()) {
        optionals.set(3);
      }
      oprot.writeBitSet(optionals, 4);
      if (struct.isSetIdFoto()) {
        oprot.writeI32(struct.idFoto);
      }
      if (struct.isSetIdReporte()) {
        oprot.writeI32(struct.idReporte);
      }
      if (struct.isSetFoto()) {
        oprot.writeString(struct.foto);
      }
      if (struct.isSetTiempoCreacion()) {
        oprot.writeString(struct.tiempoCreacion);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, Foto struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(4);
      if (incoming.get(0)) {
        struct.idFoto = iprot.readI32();
        struct.setIdFotoIsSet(true);
      }
      if (incoming.get(1)) {
        struct.idReporte = iprot.readI32();
        struct.setIdReporteIsSet(true);
      }
      if (incoming.get(2)) {
        struct.foto = iprot.readString();
        struct.setFotoIsSet(true);
      }
      if (incoming.get(3)) {
        struct.tiempoCreacion = iprot.readString();
        struct.setTiempoCreacionIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}


/**
 * Autogenerated by Thrift Compiler (0.12.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package Thrift;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.12.0)", date = "2019-06-16")
public class Dictamen implements org.apache.thrift.TBase<Dictamen, Dictamen._Fields>, java.io.Serializable, Cloneable, Comparable<Dictamen> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("Dictamen");

  private static final org.apache.thrift.protocol.TField ID_DICTAMEN_FIELD_DESC = new org.apache.thrift.protocol.TField("idDictamen", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField FOLIO_FIELD_DESC = new org.apache.thrift.protocol.TField("folio", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField DESCRIPCION_FIELD_DESC = new org.apache.thrift.protocol.TField("descripcion", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField FECHA_HORA_FIELD_DESC = new org.apache.thrift.protocol.TField("fechaHora", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField ID_INCIDENTE_FIELD_DESC = new org.apache.thrift.protocol.TField("idIncidente", org.apache.thrift.protocol.TType.I32, (short)5);
  private static final org.apache.thrift.protocol.TField ID_USUARIO_FIELD_DESC = new org.apache.thrift.protocol.TField("idUsuario", org.apache.thrift.protocol.TType.I32, (short)6);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new DictamenStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new DictamenTupleSchemeFactory();

  public int idDictamen; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String folio; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String descripcion; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String fechaHora; // required
  public int idIncidente; // required
  public int idUsuario; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ID_DICTAMEN((short)1, "idDictamen"),
    FOLIO((short)2, "folio"),
    DESCRIPCION((short)3, "descripcion"),
    FECHA_HORA((short)4, "fechaHora"),
    ID_INCIDENTE((short)5, "idIncidente"),
    ID_USUARIO((short)6, "idUsuario");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID_DICTAMEN
          return ID_DICTAMEN;
        case 2: // FOLIO
          return FOLIO;
        case 3: // DESCRIPCION
          return DESCRIPCION;
        case 4: // FECHA_HORA
          return FECHA_HORA;
        case 5: // ID_INCIDENTE
          return ID_INCIDENTE;
        case 6: // ID_USUARIO
          return ID_USUARIO;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __IDDICTAMEN_ISSET_ID = 0;
  private static final int __IDINCIDENTE_ISSET_ID = 1;
  private static final int __IDUSUARIO_ISSET_ID = 2;
  private byte __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID_DICTAMEN, new org.apache.thrift.meta_data.FieldMetaData("idDictamen", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.FOLIO, new org.apache.thrift.meta_data.FieldMetaData("folio", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DESCRIPCION, new org.apache.thrift.meta_data.FieldMetaData("descripcion", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.FECHA_HORA, new org.apache.thrift.meta_data.FieldMetaData("fechaHora", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ID_INCIDENTE, new org.apache.thrift.meta_data.FieldMetaData("idIncidente", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ID_USUARIO, new org.apache.thrift.meta_data.FieldMetaData("idUsuario", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(Dictamen.class, metaDataMap);
  }

  public Dictamen() {
  }

  public Dictamen(
    int idDictamen,
    java.lang.String folio,
    java.lang.String descripcion,
    java.lang.String fechaHora,
    int idIncidente,
    int idUsuario)
  {
    this();
    this.idDictamen = idDictamen;
    setIdDictamenIsSet(true);
    this.folio = folio;
    this.descripcion = descripcion;
    this.fechaHora = fechaHora;
    this.idIncidente = idIncidente;
    setIdIncidenteIsSet(true);
    this.idUsuario = idUsuario;
    setIdUsuarioIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public Dictamen(Dictamen other) {
    __isset_bitfield = other.__isset_bitfield;
    this.idDictamen = other.idDictamen;
    if (other.isSetFolio()) {
      this.folio = other.folio;
    }
    if (other.isSetDescripcion()) {
      this.descripcion = other.descripcion;
    }
    if (other.isSetFechaHora()) {
      this.fechaHora = other.fechaHora;
    }
    this.idIncidente = other.idIncidente;
    this.idUsuario = other.idUsuario;
  }

  public Dictamen deepCopy() {
    return new Dictamen(this);
  }

  @Override
  public void clear() {
    setIdDictamenIsSet(false);
    this.idDictamen = 0;
    this.folio = null;
    this.descripcion = null;
    this.fechaHora = null;
    setIdIncidenteIsSet(false);
    this.idIncidente = 0;
    setIdUsuarioIsSet(false);
    this.idUsuario = 0;
  }

  public int getIdDictamen() {
    return this.idDictamen;
  }

  public Dictamen setIdDictamen(int idDictamen) {
    this.idDictamen = idDictamen;
    setIdDictamenIsSet(true);
    return this;
  }

  public void unsetIdDictamen() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __IDDICTAMEN_ISSET_ID);
  }

  /** Returns true if field idDictamen is set (has been assigned a value) and false otherwise */
  public boolean isSetIdDictamen() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __IDDICTAMEN_ISSET_ID);
  }

  public void setIdDictamenIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __IDDICTAMEN_ISSET_ID, value);
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getFolio() {
    return this.folio;
  }

  public Dictamen setFolio(@org.apache.thrift.annotation.Nullable java.lang.String folio) {
    this.folio = folio;
    return this;
  }

  public void unsetFolio() {
    this.folio = null;
  }

  /** Returns true if field folio is set (has been assigned a value) and false otherwise */
  public boolean isSetFolio() {
    return this.folio != null;
  }

  public void setFolioIsSet(boolean value) {
    if (!value) {
      this.folio = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getDescripcion() {
    return this.descripcion;
  }

  public Dictamen setDescripcion(@org.apache.thrift.annotation.Nullable java.lang.String descripcion) {
    this.descripcion = descripcion;
    return this;
  }

  public void unsetDescripcion() {
    this.descripcion = null;
  }

  /** Returns true if field descripcion is set (has been assigned a value) and false otherwise */
  public boolean isSetDescripcion() {
    return this.descripcion != null;
  }

  public void setDescripcionIsSet(boolean value) {
    if (!value) {
      this.descripcion = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getFechaHora() {
    return this.fechaHora;
  }

  public Dictamen setFechaHora(@org.apache.thrift.annotation.Nullable java.lang.String fechaHora) {
    this.fechaHora = fechaHora;
    return this;
  }

  public void unsetFechaHora() {
    this.fechaHora = null;
  }

  /** Returns true if field fechaHora is set (has been assigned a value) and false otherwise */
  public boolean isSetFechaHora() {
    return this.fechaHora != null;
  }

  public void setFechaHoraIsSet(boolean value) {
    if (!value) {
      this.fechaHora = null;
    }
  }

  public int getIdIncidente() {
    return this.idIncidente;
  }

  public Dictamen setIdIncidente(int idIncidente) {
    this.idIncidente = idIncidente;
    setIdIncidenteIsSet(true);
    return this;
  }

  public void unsetIdIncidente() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __IDINCIDENTE_ISSET_ID);
  }

  /** Returns true if field idIncidente is set (has been assigned a value) and false otherwise */
  public boolean isSetIdIncidente() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __IDINCIDENTE_ISSET_ID);
  }

  public void setIdIncidenteIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __IDINCIDENTE_ISSET_ID, value);
  }

  public int getIdUsuario() {
    return this.idUsuario;
  }

  public Dictamen setIdUsuario(int idUsuario) {
    this.idUsuario = idUsuario;
    setIdUsuarioIsSet(true);
    return this;
  }

  public void unsetIdUsuario() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __IDUSUARIO_ISSET_ID);
  }

  /** Returns true if field idUsuario is set (has been assigned a value) and false otherwise */
  public boolean isSetIdUsuario() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __IDUSUARIO_ISSET_ID);
  }

  public void setIdUsuarioIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __IDUSUARIO_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case ID_DICTAMEN:
      if (value == null) {
        unsetIdDictamen();
      } else {
        setIdDictamen((java.lang.Integer)value);
      }
      break;

    case FOLIO:
      if (value == null) {
        unsetFolio();
      } else {
        setFolio((java.lang.String)value);
      }
      break;

    case DESCRIPCION:
      if (value == null) {
        unsetDescripcion();
      } else {
        setDescripcion((java.lang.String)value);
      }
      break;

    case FECHA_HORA:
      if (value == null) {
        unsetFechaHora();
      } else {
        setFechaHora((java.lang.String)value);
      }
      break;

    case ID_INCIDENTE:
      if (value == null) {
        unsetIdIncidente();
      } else {
        setIdIncidente((java.lang.Integer)value);
      }
      break;

    case ID_USUARIO:
      if (value == null) {
        unsetIdUsuario();
      } else {
        setIdUsuario((java.lang.Integer)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case ID_DICTAMEN:
      return getIdDictamen();

    case FOLIO:
      return getFolio();

    case DESCRIPCION:
      return getDescripcion();

    case FECHA_HORA:
      return getFechaHora();

    case ID_INCIDENTE:
      return getIdIncidente();

    case ID_USUARIO:
      return getIdUsuario();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case ID_DICTAMEN:
      return isSetIdDictamen();
    case FOLIO:
      return isSetFolio();
    case DESCRIPCION:
      return isSetDescripcion();
    case FECHA_HORA:
      return isSetFechaHora();
    case ID_INCIDENTE:
      return isSetIdIncidente();
    case ID_USUARIO:
      return isSetIdUsuario();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof Dictamen)
      return this.equals((Dictamen)that);
    return false;
  }

  public boolean equals(Dictamen that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_idDictamen = true;
    boolean that_present_idDictamen = true;
    if (this_present_idDictamen || that_present_idDictamen) {
      if (!(this_present_idDictamen && that_present_idDictamen))
        return false;
      if (this.idDictamen != that.idDictamen)
        return false;
    }

    boolean this_present_folio = true && this.isSetFolio();
    boolean that_present_folio = true && that.isSetFolio();
    if (this_present_folio || that_present_folio) {
      if (!(this_present_folio && that_present_folio))
        return false;
      if (!this.folio.equals(that.folio))
        return false;
    }

    boolean this_present_descripcion = true && this.isSetDescripcion();
    boolean that_present_descripcion = true && that.isSetDescripcion();
    if (this_present_descripcion || that_present_descripcion) {
      if (!(this_present_descripcion && that_present_descripcion))
        return false;
      if (!this.descripcion.equals(that.descripcion))
        return false;
    }

    boolean this_present_fechaHora = true && this.isSetFechaHora();
    boolean that_present_fechaHora = true && that.isSetFechaHora();
    if (this_present_fechaHora || that_present_fechaHora) {
      if (!(this_present_fechaHora && that_present_fechaHora))
        return false;
      if (!this.fechaHora.equals(that.fechaHora))
        return false;
    }

    boolean this_present_idIncidente = true;
    boolean that_present_idIncidente = true;
    if (this_present_idIncidente || that_present_idIncidente) {
      if (!(this_present_idIncidente && that_present_idIncidente))
        return false;
      if (this.idIncidente != that.idIncidente)
        return false;
    }

    boolean this_present_idUsuario = true;
    boolean that_present_idUsuario = true;
    if (this_present_idUsuario || that_present_idUsuario) {
      if (!(this_present_idUsuario && that_present_idUsuario))
        return false;
      if (this.idUsuario != that.idUsuario)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + idDictamen;

    hashCode = hashCode * 8191 + ((isSetFolio()) ? 131071 : 524287);
    if (isSetFolio())
      hashCode = hashCode * 8191 + folio.hashCode();

    hashCode = hashCode * 8191 + ((isSetDescripcion()) ? 131071 : 524287);
    if (isSetDescripcion())
      hashCode = hashCode * 8191 + descripcion.hashCode();

    hashCode = hashCode * 8191 + ((isSetFechaHora()) ? 131071 : 524287);
    if (isSetFechaHora())
      hashCode = hashCode * 8191 + fechaHora.hashCode();

    hashCode = hashCode * 8191 + idIncidente;

    hashCode = hashCode * 8191 + idUsuario;

    return hashCode;
  }

  @Override
  public int compareTo(Dictamen other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetIdDictamen()).compareTo(other.isSetIdDictamen());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIdDictamen()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.idDictamen, other.idDictamen);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetFolio()).compareTo(other.isSetFolio());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFolio()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.folio, other.folio);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetDescripcion()).compareTo(other.isSetDescripcion());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDescripcion()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.descripcion, other.descripcion);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetFechaHora()).compareTo(other.isSetFechaHora());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFechaHora()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.fechaHora, other.fechaHora);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetIdIncidente()).compareTo(other.isSetIdIncidente());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIdIncidente()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.idIncidente, other.idIncidente);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetIdUsuario()).compareTo(other.isSetIdUsuario());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIdUsuario()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.idUsuario, other.idUsuario);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("Dictamen(");
    boolean first = true;

    sb.append("idDictamen:");
    sb.append(this.idDictamen);
    first = false;
    if (!first) sb.append(", ");
    sb.append("folio:");
    if (this.folio == null) {
      sb.append("null");
    } else {
      sb.append(this.folio);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("descripcion:");
    if (this.descripcion == null) {
      sb.append("null");
    } else {
      sb.append(this.descripcion);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("fechaHora:");
    if (this.fechaHora == null) {
      sb.append("null");
    } else {
      sb.append(this.fechaHora);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("idIncidente:");
    sb.append(this.idIncidente);
    first = false;
    if (!first) sb.append(", ");
    sb.append("idUsuario:");
    sb.append(this.idUsuario);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class DictamenStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public DictamenStandardScheme getScheme() {
      return new DictamenStandardScheme();
    }
  }

  private static class DictamenStandardScheme extends org.apache.thrift.scheme.StandardScheme<Dictamen> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, Dictamen struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID_DICTAMEN
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.idDictamen = iprot.readI32();
              struct.setIdDictamenIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // FOLIO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.folio = iprot.readString();
              struct.setFolioIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // DESCRIPCION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.descripcion = iprot.readString();
              struct.setDescripcionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // FECHA_HORA
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.fechaHora = iprot.readString();
              struct.setFechaHoraIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // ID_INCIDENTE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.idIncidente = iprot.readI32();
              struct.setIdIncidenteIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // ID_USUARIO
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.idUsuario = iprot.readI32();
              struct.setIdUsuarioIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, Dictamen struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(ID_DICTAMEN_FIELD_DESC);
      oprot.writeI32(struct.idDictamen);
      oprot.writeFieldEnd();
      if (struct.folio != null) {
        oprot.writeFieldBegin(FOLIO_FIELD_DESC);
        oprot.writeString(struct.folio);
        oprot.writeFieldEnd();
      }
      if (struct.descripcion != null) {
        oprot.writeFieldBegin(DESCRIPCION_FIELD_DESC);
        oprot.writeString(struct.descripcion);
        oprot.writeFieldEnd();
      }
      if (struct.fechaHora != null) {
        oprot.writeFieldBegin(FECHA_HORA_FIELD_DESC);
        oprot.writeString(struct.fechaHora);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(ID_INCIDENTE_FIELD_DESC);
      oprot.writeI32(struct.idIncidente);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(ID_USUARIO_FIELD_DESC);
      oprot.writeI32(struct.idUsuario);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class DictamenTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public DictamenTupleScheme getScheme() {
      return new DictamenTupleScheme();
    }
  }

  private static class DictamenTupleScheme extends org.apache.thrift.scheme.TupleScheme<Dictamen> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, Dictamen struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetIdDictamen()) {
        optionals.set(0);
      }
      if (struct.isSetFolio()) {
        optionals.set(1);
      }
      if (struct.isSetDescripcion()) {
        optionals.set(2);
      }
      if (struct.isSetFechaHora()) {
        optionals.set(3);
      }
      if (struct.isSetIdIncidente()) {
        optionals.set(4);
      }
      if (struct.isSetIdUsuario()) {
        optionals.set(5);
      }
      oprot.writeBitSet(optionals, 6);
      if (struct.isSetIdDictamen()) {
        oprot.writeI32(struct.idDictamen);
      }
      if (struct.isSetFolio()) {
        oprot.writeString(struct.folio);
      }
      if (struct.isSetDescripcion()) {
        oprot.writeString(struct.descripcion);
      }
      if (struct.isSetFechaHora()) {
        oprot.writeString(struct.fechaHora);
      }
      if (struct.isSetIdIncidente()) {
        oprot.writeI32(struct.idIncidente);
      }
      if (struct.isSetIdUsuario()) {
        oprot.writeI32(struct.idUsuario);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, Dictamen struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(6);
      if (incoming.get(0)) {
        struct.idDictamen = iprot.readI32();
        struct.setIdDictamenIsSet(true);
      }
      if (incoming.get(1)) {
        struct.folio = iprot.readString();
        struct.setFolioIsSet(true);
      }
      if (incoming.get(2)) {
        struct.descripcion = iprot.readString();
        struct.setDescripcionIsSet(true);
      }
      if (incoming.get(3)) {
        struct.fechaHora = iprot.readString();
        struct.setFechaHoraIsSet(true);
      }
      if (incoming.get(4)) {
        struct.idIncidente = iprot.readI32();
        struct.setIdIncidenteIsSet(true);
      }
      if (incoming.get(5)) {
        struct.idUsuario = iprot.readI32();
        struct.setIdUsuarioIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

